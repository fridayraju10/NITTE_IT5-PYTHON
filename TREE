class Node:
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None

class Tree:
    def __init__(self):
        self.root = None

    def insert(self, data):
        z = Node(data)
        if self.root is None:
            self.root = z
        else:
            temp = self.root
            while True:
                if data < temp.data:
                    if temp.left is None:
                        temp.left = z
                        break
                    else:
                        temp = temp.left
                else:
                    if temp.right is None:
                        temp.right = z
                        break
                    else:
                        temp = temp.right

    def inOrder(self, root):
        if root is not None:
            self.inOrder(root.left)
            print(root.data, end=" ")
            self.inOrder(root.right)

    def preOrder(self, root):
        if root is not None:
            print(root.data, end=" ")
            self.preOrder(root.left)
            self.preOrder(root.right)

    def postOrder(self, root):
        if root is not None:
            self.postOrder(root.left)
            self.postOrder(root.right)
            print(root.data, end=" ")

    def search(self, data):
        temp = self.root
        while temp is not None:
            if data < temp.data:
                temp = temp.left
            elif data > temp.data:
                temp = temp.right
            else:
                print("Found")
                return temp
        print("Not found")
        return None

if __name__ == "__main__":
    x = Tree()
    x.insert(10)
    x.insert(12)
    x.insert(3)
    x.insert(11)
    x.insert(25)
    x.insert(50)
    x.insert(5)

    print("The Inorder is...")
    x.inOrder(x.root)
    print("\nThe preorder is...")
    x.preOrder(x.root)
    print("\nThe postorder is...")
    x.postOrder(x.root)

    x.search(10)
