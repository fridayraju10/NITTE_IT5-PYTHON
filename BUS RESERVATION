from datetime import datetime

class Bus:
    def __init__(self, bus_no, ac, capacity):
        self.bus_no = bus_no
        self.ac = ac
        self.capacity = capacity

    def get_bus_no(self):
        return self.bus_no

    def is_ac(self):
        return self.ac

    def get_capacity(self):
        return self.capacity

    def display_bus_info(self):
        print(f"{'Bus No':<10}: {self.bus_no}")
        print(f"{'AC':<10}: {'Yes' if self.ac else 'No'}")
        print(f"{'Capacity':<10}: {self.capacity}")
        print("-" * 30)

class Booking:
    def __init__(self):
        self.passenger_name = ""
        self.date = None
        self.bus_no = 0

    def make_booking(self, bookings, buses):
        self.passenger_name = input("Enter name of passenger: ").strip()
        self.bus_no = int(input("Enter bus number: "))
        date_input = input("Enter date (dd-mm-yyyy): ").strip()
        self.date = datetime.strptime(date_input, "%d-%m-%Y").date()

        if self.is_available(bookings, buses, self.bus_no, self.date):
            bookings.append(self)
            print("Booking confirmed!")
        else:
            print("Bus is full or not found.")

    def is_available(self, bookings, buses, bus_no, date):
        capacity = 0
        for bus in buses:
            if bus.get_bus_no() == bus_no:
                capacity = bus.get_capacity()
                break
        else:
            print("Bus number not found.")
            return False

        booked = sum(1 for b in bookings if b.bus_no == bus_no and b.date == date)
        return booked < capacity

    def display_booking_info(self):
        print(f"{'Passenger':<15}: {self.passenger_name}")
        print(f"{'Bus No':<15}: {self.bus_no}")
        print(f"{'Date':<15}: {self.date.strftime('%d-%m-%Y')}")
        print("-" * 40)


buses = [
    Bus(1, True, 2),
    Bus(2, False, 50),
    Bus(3, True, 48)
]

bookings = []

print(" Available Buses:")
for bus in buses:
    bus.display_bus_info()


while True:
    user_opt = input("\nEnter 1 to Book, 2 to View Bookings, 3 to Exit: ").strip()
    if user_opt == '1':
        booking = Booking()
        booking.make_booking(bookings, buses)
    elif user_opt == '2':
        print("All Bookings:")
        if not bookings:
            print("No bookings available.")
        for b in bookings:
            b.display_booking_info()
    elif user_opt == '3':
        print(" Exiting... Have a safe journey!")
        break
    else:
        print("Invalid option. Please try again.")
